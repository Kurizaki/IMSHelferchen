// This event ensures that the script runs after the HTML document is fully loaded.
document.addEventListener("DOMContentLoaded", function() {
    // Object containing categorized library items with their names and URLs.
    const categorizedLibraryItems = {
        "Kanti Baden": [
            { name: "Kanti Baden", url: "https://www.kanti-baden.ch/" },
            { name: "Schulnetz", url: "https://www.schul-netz.com/baden/" }
        ],
        "BBBaden": [
            { name: "BBBaden", url: "https://www.bbbaden.ch/" },
            { name: "Moodle", url: "https://moodle.bbbaden.ch/" },
            { name: "Mahara", url: "https://portfolio.bbbaden.ch/" },
            { name: "BBB GitLab", url: "https://bbbhub.bbbaden.ch/informatik-bivo2021?page=1" },
            { name: "Azure", url: "https://portal.azure.com/#home" }
            
        ],
        "Other": [
            { name: "GitHub", url: "https://github.com/" },
            { name: "ChatGPT", url: "https://chat.openai.com/" }
        ]
    };

// Function to create a single library item (list item with a link).
function createLibraryItem(item) {
    // Create a list item element.
    const listItem = document.createElement("li");
    
    // Create an anchor element for the link.
    const link = document.createElement("a");
    link.href = item.url; // Set the URL for the anchor element.
    link.target = "_blank"; // Open the link in a new tab/window.
    link.textContent = item.name; // Set the display text for the link.
    
    // Append the anchor element to the list item.
    listItem.appendChild(link);
    
    return listItem; // Return the created list item.
}

// Get the HTML element where the library list will be displayed.
const libraryList = document.getElementById("library-list");

// Iterate through each category in the categorizedLibraryItems object.
for (let category in categorizedLibraryItems) {
    const categoryHeader = document.createElement("h3");
    categoryHeader.textContent = category; // Set the category name as the header text.
    
    // Append the category header to the library list.
    libraryList.appendChild(categoryHeader);

    // Iterate through each item in the current category and create/display the list items.
    categorizedLibraryItems[category].forEach(item => {
        libraryList.appendChild(createLibraryItem(item));
    });
}
});
//comments are generated by ChatGPT